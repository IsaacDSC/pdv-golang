// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: order.sql

package sqlc

import (
	"context"
	"database/sql"
)

const createOrder = `-- name: CreateOrder :exec
INSERT INTO
    "order" (
        order_id,
        billing_type,
        price,
        discount,
        price_delivery,
        is_delivery,
        "status",
        client_id,
        delivery_id,
        created_at
    )
VALUES
($1, $2, $3, $4, $5, $6, $7, $8, $9, now())
`

type CreateOrderParams struct {
	OrderID       string
	BillingType   sql.NullString
	Price         float64
	Discount      sql.NullFloat64
	PriceDelivery float64
	IsDelivery    sql.NullBool
	Status        sql.NullString
	ClientID      string
	DeliveryID    string
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) error {
	_, err := q.db.ExecContext(ctx, createOrder,
		arg.OrderID,
		arg.BillingType,
		arg.Price,
		arg.Discount,
		arg.PriceDelivery,
		arg.IsDelivery,
		arg.Status,
		arg.ClientID,
		arg.DeliveryID,
	)
	return err
}

const updateStatusOrder = `-- name: UpdateStatusOrder :exec
UPDATE "order" SET status = $1, updated_at = now() WHERE order_id = $2
`

type UpdateStatusOrderParams struct {
	Status  sql.NullString
	OrderID string
}

func (q *Queries) UpdateStatusOrder(ctx context.Context, arg UpdateStatusOrderParams) error {
	_, err := q.db.ExecContext(ctx, updateStatusOrder, arg.Status, arg.OrderID)
	return err
}
